name: CI

on:
  push:
    branches:
      - master
      - pymem
  pull_request:
  release:

jobs:
  build:
    name: Harmony OS Build
    runs-on: ubuntu-latest
    container:
      image: alpine:latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              name: "Harmony OS aarch64 musl",
              os: alpine,
              build_type: "Debug",
              do_coverage: "OFF",
            }

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 25

      - name: Print env
        run: |
          echo "github.workspace: ${{github.workspace}}"
          echo "github.ref: ${{github.ref}}"
          echo "github.event.action: ${{github.event.action}}"
          echo "github.event_name: ${{github.event_name}}"
          echo "runner.os: ${{runner.os}}"
          env

      - name: Install dependencies for Harmony OS
        run: |
          apk update
          apk add cmake musl-dev ninja gcc g++ make wget tar git

      - name: Install Eigen3
        run: |
          wget https://gitlab.com/libeigen/eigen/-/archive/3.3.9/eigen-3.3.9.tar.gz
          tar -xzf eigen-3.3.9.tar.gz
          mkdir -p eigen-3.3.9/build
          cd eigen-3.3.9/build
          cmake ..
          make install

      - name: Download and install aarch64-linux-musl-gcc
        run: |
          wget https://musl.cc/aarch64-linux-musl-cross.tgz
          tar -xzf aarch64-linux-musl-cross.tgz
          export PATH=$PATH:$(pwd)/aarch64-linux-musl-cross/bin

      - name: Configure CMake for Harmony OS
        run: |
          echo "number of cores: $(nproc)"
          cmake --version
          export PATH=$PATH:$(pwd)/aarch64-linux-musl-cross/bin
          cmake -B ${{github.workspace}}/build -S ${{github.workspace}} -DBUILD_UNITTESTS=ON -DCMAKE_BUILD_TYPE=${{matrix.config.build_type}} -DCMAKE_C_COMPILER=aarch64-linux-musl-gcc -DCMAKE_CXX_COMPILER=aarch64-linux-musl-g++ -DCMAKE_SYSTEM_NAME=Linux -DCMAKE_SYSTEM_PROCESSOR=aarch64 -G Ninja

      - name: Build Introspection
        run: |
          echo "g2o config.h"
          cat ${{github.workspace}}/build/g2o/config.h
          echo "ENV"
          env | sort

      - name: Build
        run: |
          export PATH=$PATH:$(pwd)/aarch64-linux-musl-cross/bin
          cmake --build ${{github.workspace}}/build --config ${{matrix.config.build_type}} -j $(nproc)

      - name: List build directory contents
        run: |
          ls -la ${{github.workspace}}/build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: ${{github.workspace}}/build/**
